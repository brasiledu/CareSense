# Generated by Django 4.2 on 2025-07-24 18:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('patients', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pendente'), ('IN_PROGRESS', 'Em Andamento'), ('COMPLETED', 'Concluído'), ('CANCELLED', 'Cancelado')], default='PENDING', max_length=15, verbose_name='Status')),
                ('final_risk_score', models.CharField(blank=True, choices=[('LOW', 'Baixo'), ('MODERATE', 'Moderado'), ('HIGH', 'Alto'), ('CRITICAL', 'Crítico')], max_length=10, null=True, verbose_name='Pontuação Final de Risco')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('assessor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to=settings.AUTH_USER_MODEL, verbose_name='Avaliador')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='patients.patient', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Avaliação',
                'verbose_name_plural': 'Avaliações',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TMTResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_a_seconds', models.FloatField(verbose_name='Tempo TMT-A (segundos)')),
                ('errors_a', models.IntegerField(default=0, verbose_name='Erros TMT-A')),
                ('time_b_seconds', models.FloatField(verbose_name='Tempo TMT-B (segundos)')),
                ('errors_b', models.IntegerField(default=0, verbose_name='Erros TMT-B')),
                ('z_score_a', models.FloatField(blank=True, null=True, verbose_name='Z-Score TMT-A')),
                ('z_score_b', models.FloatField(blank=True, null=True, verbose_name='Z-Score TMT-B')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assessment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tmt_result', to='assessments.assessment', verbose_name='Avaliação')),
            ],
            options={
                'verbose_name': 'Resultado TMT',
                'verbose_name_plural': 'Resultados TMT',
            },
        ),
        migrations.CreateModel(
            name='StroopResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_1_time', models.FloatField(verbose_name='Tempo Cartão 1 (segundos)')),
                ('card_1_errors', models.IntegerField(default=0, verbose_name='Erros Cartão 1')),
                ('card_2_time', models.FloatField(verbose_name='Tempo Cartão 2 (segundos)')),
                ('card_2_errors', models.IntegerField(default=0, verbose_name='Erros Cartão 2')),
                ('card_3_time', models.FloatField(verbose_name='Tempo Cartão 3 (segundos)')),
                ('card_3_errors', models.IntegerField(default=0, verbose_name='Erros Cartão 3')),
                ('z_score', models.FloatField(blank=True, null=True, verbose_name='Z-Score')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assessment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stroop_result', to='assessments.assessment', verbose_name='Avaliação')),
            ],
            options={
                'verbose_name': 'Resultado Stroop',
                'verbose_name_plural': 'Resultados Stroop',
            },
        ),
        migrations.CreateModel(
            name='DigitSpanResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forward_score', models.IntegerField(verbose_name='Pontuação Direta')),
                ('forward_span', models.IntegerField(verbose_name='Span Direto')),
                ('backward_score', models.IntegerField(verbose_name='Pontuação Inversa')),
                ('backward_span', models.IntegerField(verbose_name='Span Inverso')),
                ('z_score', models.FloatField(blank=True, null=True, verbose_name='Z-Score')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assessment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='digit_span_result', to='assessments.assessment', verbose_name='Avaliação')),
            ],
            options={
                'verbose_name': 'Resultado Span de Dígitos',
                'verbose_name_plural': 'Resultados Span de Dígitos',
            },
        ),
    ]
